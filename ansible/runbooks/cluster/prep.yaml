# ---------------------------------------------------------------------------------------------------
# section for trying to stop unattended upgrade from locking the apt-get app and breaking the playbook
- name: Disable unattended upgrade
  become: yes
  become_method: sudo
  replace:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    regexp: '1'
    replace: '0'
    backup: yes
  register: unattendedupgrade

# This could be later, but would require a second reboot, which is slow. We do it now so no need for extra reboots
- name: Set OS properties necessary for running containers
  when: inventory_hostname not in groups['virtualbox_nodes']
  become: yes
  become_user: root
  lineinfile:
    path: "{{cmdlinefile}}"
    backrefs: yes
    regexp: '^(.*(fixrtc|splash))$'
    line: '\1 {{cmdlinecontents}}'
  register: ospropertieschanged

- name: Reboot for disable (and cgroup) to take effect
  become: yes
  become_user: root
  reboot:
    reboot_timeout: 600
  when: inventory_hostname not in groups['virtualbox_nodes'] and unattendedupgrade.changed or ospropertieschanged.changed
# ---------------------------------------------------------------------------------------------------


- name: Update
  become: yes
  apt: update_cache=true cache_valid_time=604800 # 7 days
    #upgrade: dist
  
- name: Install essentials
  become: yes
  apt:
    pkg: 
    - pip
    - vim
    - htop
    - golang-go
    - net-tools
    - nfs-kernel-server # needed for mounting the NAS NFS shares
    state: present
  async: 2000
  poll: 0
  register: install_progress

- name: Set hostname
  become: yes
  hostname:
    name: "{{ inventory_hostname }}"

- name: Wait for installs
  become: yes
  async_status:
    jid: "{{ install_progress.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 50
  delay: 30

- name: Install python modules
  become: yes
  pip:
    name: pexpect

- name: Set initial Vim params
  lineinfile:
    path: ~/.vimrc
    line: colorscheme blue
    create: yes